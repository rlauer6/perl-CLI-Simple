#!/usr/bin/env bash
#-*- mode: sh; -*-
# Script to create or run a Modulino
#
# To create a modulino link from a well formed module name
#   modulino Foo::Bar::Baz ...  will create foo_bar_baz
#
# To create a modulino link and force the name
#   modulino Foo/Bar/Baz.pm ... will create foo-bar-baz
#
# To run a modulino...
#   foo-bar-baz

pgm=$(basename $0)

if [ "$pgm" = "modulino" ]; then
    MODULE="$1";

    if test -z "$MODULE"; then
        echo "usage: modulino MODULE-NAME"
        echo "        examples: modulino Foo::Bar"
        echo "                  modulino Foo/Bar.pm"
        exit 1;
    fi

    $MODULINO_PATH=$(command -v modulino)

    extension="${MODULE##*.}"
    bindir=$(dirname $(command -v modulino))
    
    if [ "$extension" = "$(basename $MODULE)" ]; then
        echo ln -s $MODULINO_PATH ${bindir}/$(echo "$MODULE" | perl -ne 's/::/-/g; print lc;')
    else
        filename="${MODULE%.*}"
        echo ln -s $MODULINO_PATH ${bindir}/$(echo $filename | perl -ne 's/\//-/g; print lc')
    fi
else  
    REALPATH=$(command -v realpath)
    REALPATH=${REALPATH:-readlink -f}

    path=$(basename $($REALPATH $0))

    if ! [ "$path" = "modulino" ]; then
       pgm=$(basename $($REALPATH $0))
    fi
   
    MODULINO_PATH=$(echo $pgm | perl -ne 'chomp; printf "%s.pm", join "/", map { ucfirst $_ } split /-/;')
    MODULINO=$(echo $pgm | perl -ne 'chomp; print join "::", map { ucfirst $_ } split /-/;')
    
    MODULINO_RUN=$(perl -M$MODULINO -e 'print $INC{"'$MODULINO_PATH'"}';)
    
    if test -z "$MODULINO_RUN"; then
        echo "$MODULINO is not installed"
        exit 1;
    fi
    
    perl $MODULINO_RUN "$@"
fi
